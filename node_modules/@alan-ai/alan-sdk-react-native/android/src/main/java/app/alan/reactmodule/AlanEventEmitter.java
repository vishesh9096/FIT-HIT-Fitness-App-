package app.alan.reactmodule;

import com.facebook.react.bridge.Arguments;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.WritableMap;
import com.facebook.react.modules.core.DeviceEventManagerModule;

import org.json.JSONException;
import org.json.JSONObject;

import javax.annotation.Nullable;

public class AlanEventEmitter extends ReactContextBaseJavaModule {

    private final static String REACT_CLASS = "AlanEventEmitter";
    public static AlanEventEmitter INSTANCE;

    public AlanEventEmitter(ReactApplicationContext reactContext) {
        super(reactContext);
        INSTANCE = this;
    }

    @Override
    public String getName() {
        return REACT_CLASS;
    }

    public void onConnected(JSONObject json) {
        try {
            JSONObject data = json.getJSONObject("data");
            WritableMap payload = JsonConverter.jsonToReact(data);
            getReactApplicationContext()
                    .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
                    .emit("command", payload);
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    public void onCommand(JSONObject json) {
        try {
            JSONObject data = json.getJSONObject("data");
            WritableMap payload = JsonConverter.jsonToReact(data);
            getReactApplicationContext()
                    .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
                    .emit("onCommand", payload);
        } catch (JSONException e) {
            e.printStackTrace();
        }
    }

    public void onEvent(String payload) {
        getReactApplicationContext()
                .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
                .emit("onEvent", payload);
    }

    public void onButtonState(String state) {
        getReactApplicationContext()
                .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
                .emit("onButtonState", state);
    }

}
